# =============================================================================
# API-WORK PROFILE - For REST API Web Service Testing
# =============================================================================
# This profile configures the server to run as a REST API web service for
# HTTP-based tool access, testing, and integration with web clients.
# 
# Usage: java -jar mcp-oracledb-server.jar --spring.profiles.active=api-work
# Test: curl -X POST http://localhost:8080/api/v1/oracle/list-databases
# =============================================================================

# Application Configuration
spring.application.name=mcp-oracledb-server-api
spring.main.web-application-type=servlet
spring.main.banner-mode=console

# Web Server Configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/api/v1
server.compression.enabled=true
server.shutdown=graceful

# Oracle Database Configuration
spring.datasource.url=jdbc:oracle:thin:@${ORACLE_HOST:localhost}:${ORACLE_PORT:1521}/${ORACLE_SID:ORCL}
spring.datasource.username=${ORACLE_USERNAME:C##deepai}
spring.datasource.password=${ORACLE_PASSWORD:admin}
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Connection Pool for API usage
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# MCP Configuration - REST Transport
mcp.tools.exposure=all
mcp.transport=rest

# Oracle Feature Detection
oracle.features.detection.enabled=true
oracle.features.cache.ttl=3600

# Tool Categories - Full exposure for API testing
oracle.features.tools.core.enabled=true
oracle.features.tools.core.count=25
oracle.features.tools.analytics.enabled=true
oracle.features.tools.analytics.count=20
oracle.features.tools.ai.enabled=true
oracle.features.tools.ai.count=10
oracle.features.tools.enterprise.enabled=${ENTERPRISE_ENABLED:true}

# Logging for API testing
logging.level.root=INFO
logging.level.com.deepai.mcpserver=DEBUG
logging.level.oracle.jdbc=INFO
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator for API monitoring and testing
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.db.enabled=true

# Security - Basic for API testing
spring.security.user.name=${API_USERNAME:admin}
spring.security.user.password=${API_PASSWORD:admin}
spring.security.user.roles=API_USER,ADMIN

# CORS for web testing
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# JSON formatting for readable API responses
spring.jackson.serialization.indent-output=true
spring.jackson.serialization.write-dates-as-timestamps=false

# Error handling for API testing
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
