# =============================================================================
# MCP-STDIO RUN PROFILE - For MCP Client Communication
# =============================================================================
# This profile configures the server to run in MCP-stdio mode for integration
# with MCP clients like Claude Desktop, Codeium, or custom MCP implementations.
# 
# Usage: java -jar mcp-oracledb-server.jar --spring.profiles.active=mcp-run
# =============================================================================

# Application Configuration
spring.application.name=mcp-oracledb-server
spring.main.web-application-type=none
spring.main.banner-mode=off
spring.main.keep-alive=true

# Disable HTTP server completely for stdio communication
server.port=0
server.shutdown=graceful

# Oracle Database Configuration - Fixed for Oracle XE
spring.datasource.url=${ORACLE_DB_URL:jdbc:oracle:thin:@localhost:1521:XE}
spring.datasource.username=${ORACLE_DB_USER:C##loan_schema}
spring.datasource.password=${ORACLE_DB_PASSWORD:loan_data}
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Connection Pool Optimization for MCP usage
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=300000

# Oracle JDBC Properties for MCP - Increased timeouts for complex queries
spring.datasource.hikari.data-source-properties.oracle.net.CONNECT_TIMEOUT=60000
spring.datasource.hikari.data-source-properties.oracle.jdbc.ReadTimeout=300000
spring.datasource.hikari.data-source-properties.oracle.net.READ_TIMEOUT=300000
spring.datasource.hikari.data-source-properties.oracle.jdbc.J2EE13Compliant=true
spring.datasource.hikari.data-source-properties.oracle.jdbc.implicitStatementCacheSize=20

# Spring AI MCP Configuration - STDIO Transport
spring.ai.mcp.enabled=true
spring.ai.mcp.server.transport=stdio
spring.ai.mcp.server.name=oracle-mcp-server
spring.ai.mcp.server.version=1.0.0
spring.ai.mcp.tool.auto-discovery=true
spring.ai.mcp.tool.scan-packages=com.deepai.mcpserver.service

# MCP Tools Configuration
mcp.tools.exposure=all

# Oracle Feature Detection for MCP
oracle.features.detection.enabled=true
oracle.features.cache.ttl=3600

# Tool Categories - Optimized for MCP client usage
oracle.features.tools.core.enabled=true
oracle.features.tools.core.count=25
oracle.features.tools.analytics.enabled=true
oracle.features.tools.analytics.count=20
oracle.features.tools.ai.enabled=true
oracle.features.tools.ai.count=10
oracle.features.tools.enterprise.enabled=${ENTERPRISE_ENABLED:false}

# Logging - Minimal for stdio to avoid interference
logging.level.root=WARN
logging.level.com.deepai.mcpserver=INFO
logging.level.oracle.jdbc=ERROR
logging.level.org.springframework.boot=ERROR
logging.pattern.console=%d{HH:mm:ss.SSS} %-5level - %msg%n

# Disable unnecessary features for MCP stdio
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.health.show-details=never
spring.jmx.enabled=false
spring.output.ansi.enabled=never

# Security - Basic for MCP usage
spring.security.user.name=${MCP_USERNAME:admin}
spring.security.user.password=${MCP_PASSWORD:admin}
spring.security.user.roles=MCP_USER

# Graceful shutdown for MCP clients
spring.lifecycle.timeout-per-shutdown-phase=10s

mcp.transport=stdio
mcp.tools.visualization.enabled=true
mcp.tools.visualization.framework=plotly

# Enable the visualization tools
oracle.visualization.enabled=true
oracle.visualization.professional.enabled=true
oracle.visualization.cache.enabled=true
oracle.visualization.cache.ttl=300
oracle.visualization.chart.responsive=true
oracle.visualization.performance.queryTimeout=30000
oracle.visualization.security.sqlInjectionProtection=true

