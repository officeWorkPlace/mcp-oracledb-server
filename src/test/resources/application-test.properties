# ============================================================================
# Oracle MCP Server - Test Configuration
# ============================================================================
# Test-specific properties for unit tests, integration tests, and performance tests
# Overrides main application.properties for testing scenarios
# ============================================================================

# ============================================================================
# DATABASE CONFIGURATION FOR TESTING
# ============================================================================

# Oracle Database connection for integration testing
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:ORCL
spring.datasource.username=C##deepai
spring.datasource.password=admin
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Connection pool settings optimized for testing
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.leak-detection-threshold=60000

# Test database schema validation
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# ============================================================================
# LOGGING CONFIGURATION FOR TESTING
# ============================================================================

# Root logging level for tests (INFO to reduce noise)
logging.level.root=INFO

# Application-specific logging
logging.level.com.deepai.mcpserver=DEBUG
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.oracle.jdbc=WARN

# SQL logging for integration tests only
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Test-specific loggers
logging.level.org.springframework.test=INFO
logging.level.org.junit=INFO
logging.level.org.mockito=WARN

# ============================================================================
# SERVER CONFIGURATION FOR TESTING
# ============================================================================

# Use random port for test server to avoid conflicts
server.port=0

# Test context path
server.servlet.context-path=/test

# Disable banner for cleaner test output
spring.main.banner-mode=off

# ============================================================================
# ORACLE-SPECIFIC TEST SETTINGS
# ============================================================================

# Oracle MCP Server test configuration
mcp.oracle.test-mode=true
mcp.oracle.test-data-setup=true
mcp.oracle.test-cleanup=true

# AI and ML features test settings
mcp.oracle.ai.test-vector-dimension=1536
mcp.oracle.ai.test-similarity-threshold=0.7
mcp.oracle.ai.mock-openai-responses=true

# Analytics test configuration
mcp.oracle.analytics.test-sample-size=1000
mcp.oracle.analytics.test-confidence-level=0.95
mcp.oracle.analytics.enable-advanced-statistics=true

# Performance test settings
mcp.oracle.performance.test-parallel-degree=2
mcp.oracle.performance.test-partition-count=4
mcp.oracle.performance.enable-query-hints=true

# Security test configuration
mcp.oracle.security.test-encryption=false
mcp.oracle.security.test-auditing=true
mcp.oracle.security.mock-vault-responses=true

# ============================================================================
# TESTING FRAMEWORK CONFIGURATION
# ============================================================================

# JUnit 5 configuration
junit.jupiter.execution.parallel.enabled=true
junit.jupiter.execution.parallel.mode.default=concurrent
junit.jupiter.execution.parallel.config.strategy=dynamic

# Test execution timeout
spring.test.context.cache.maxSize=100
spring.test.mockmvc.print=false

# ============================================================================
# MOCK CONFIGURATIONS
# ============================================================================

# Mock external service responses
mock.oracle.ai.enabled=true
mock.oracle.analytics.enabled=false
mock.oracle.performance.enabled=false
mock.oracle.security.enabled=true

# Test data generation settings
test.data.generate-on-startup=false
test.data.cleanup-on-shutdown=true
test.data.use-random-data=true

# ============================================================================
# INTEGRATION TEST SPECIFIC SETTINGS
# ============================================================================

# Integration test database settings
integration.test.database.create-test-schema=true
integration.test.database.reset-data=true
integration.test.database.verify-connectivity=true

# Performance test thresholds
performance.test.max-response-time=5000
performance.test.min-throughput=100
performance.test.concurrent-users=10

# ============================================================================
# PROFILE-SPECIFIC OVERRIDES
# ============================================================================

# Unit test profile settings
---
spring.config.activate.on-profile=unit-test
# Disable database connectivity for unit tests
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
# Use H2 in-memory database for unit tests that need database
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

---
spring.config.activate.on-profile=integration-test
# Enable all database features for integration testing
mcp.oracle.enable-all-features=true
# Increase timeouts for integration tests
spring.datasource.hikari.connection-timeout=30000
# Enable detailed logging for integration tests
logging.level.com.deepai.mcpserver=TRACE

---
spring.config.activate.on-profile=performance-test
# Performance test specific settings
server.tomcat.threads.max=200
spring.datasource.hikari.maximum-pool-size=50
# Enable JVM metrics
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.metrics.enabled=true

---
spring.config.activate.on-profile=security-test
# Security test specific settings
mcp.oracle.security.test-mode=true
# Enable security features for testing
mcp.oracle.security.enable-encryption=true
mcp.oracle.security.enable-auditing=true
mcp.oracle.security.enable-access-control=true

# ============================================================================
# TEST ENVIRONMENT VARIABLES
# ============================================================================

# Environment-specific settings
test.environment=${TEST_ENV:local}
test.oracle.host=${ORACLE_HOST:localhost}
test.oracle.port=${ORACLE_PORT:1521}
test.oracle.service=${ORACLE_SERVICE:ORCL}
test.oracle.username=${ORACLE_USER:C##deepai}
test.oracle.password=${ORACLE_PASSWORD:admin}

# CI/CD specific settings
ci.build.number=${BUILD_NUMBER:local}
ci.git.commit=${GIT_COMMIT:unknown}
ci.test.parallel=${TEST_PARALLEL:true}
